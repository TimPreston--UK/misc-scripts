A simple script to tabulate data within a Unix pipeline into an ASCII-art table,
optionally filtering the data, taking only certain columns, etc.

A rather contrived example - let's tabulate process info:

[davidp@supernova:~]$ ps auxw
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
root         1  0.0  0.0   2052   716 ?        Ss   Jan21   0:16 init [2]  
root         2  0.0  0.0      0     0 ?        S    Jan21   0:00 [kthreadd]
root         3  0.0  0.0      0     0 ?        S    Jan21   0:00 [migration/0]


Let's say I want that in a table, only want the first and last column, and only 
want processes with 'getty' in the name:

[davidp@supernova:~]$ ps auxw | dev/git/misc-scripts/tabulate/tabulate \
  -f 0,10,8 --filter getty --split-on '\s+'  -K 1
|USER|COMMAND    |START|
|root|/sbin/getty|Jan21|
|root|/sbin/getty|Jan21|
|root|/sbin/getty|Jan21|
|root|/sbin/getty|Jan21|
|root|/sbin/getty|Jan21|
|root|/sbin/getty|Jan21|
|root|/sbin/getty|Jan21|

I've asked for fields 0, 10 and 8, filtering to rows which contain 'getty',
splitting by sequences of one or more space, and keeping the first row
(since that contains the headings).

TODO: document properly :)

Options taken:

--fieldspec / -f
    List the columns you want.  Note - indexing starts at 0.
    Examples: 0,3 - first and third.  0..3 - first four columns.  

--headers / -h
    Specify column heading names

--filter / -m
    Include only rows which match the given pattern

--skip-first / --skipfirst / -s
    Skip the first X rows.  Example: --skip-first=1

--keep-first / --keepfirst / -K
    Do not discard the first X rows.  Only useful when using --filter.

--separator / --seperator / --sep
    Character to use to separate columns in output.  Defaults to '|'.

--split-on / --spliton
    Pattern to use to split input into columns.  Default: '\s+' (whitespace)





